name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install development dependencies
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check code formatting with black
      run: |
        black --check --diff .

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .

    - name: Test database setup
      run: |
        cd db
        python setup_database.py --data-dir ../data --db-path test_ai_insights.db
        ls -la test_ai_insights.db

    - name: Test database functionality
      run: |
        cd db
        python database_test.py --db-path test_ai_insights.db



  database-validation:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set up database with sample data
      run: |
        cd db
        python setup_database.py --data-dir ../data --db-path ci_test.db

    - name: Validate database structure and data
      run: |
        cd db
        python database_test.py --db-path ci_test.db

    - name: Run query examples (if available)
      run: |
        cd db
        if [ -f "query_examples.py" ]; then
          python query_examples.py --db-path ci_test.db
        fi

    - name: Check database file size
      run: |
        cd db
        ls -lh ci_test.db
        # Fail if database is empty (less than 1KB)
        size=$(stat -c%s ci_test.db)
        if [ $size -lt 1024 ]; then
          echo "Database file is too small, something went wrong"
          exit 1
        fi 